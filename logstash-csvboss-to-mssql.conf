# This pipeline transfers api logs from csv files to postgres database
#./logstash -f "E:\logstash-configs\logstash-csvboss-to-mssql.conf"

input {
	file {
		path => "E:/SP-Documents/IndAddresses2.csv"
		start_position => "beginning"
		sincedb_path => "nul"
	}
}

filter {
    # Add filter here. This sample has a blank filter.
	csv { 
		columns => ["AccountNumber","custom_building","custom_additionalnumber","custom_Zipcode","alixis_StreetNameAR","alixis_StreetNameEN","alixis_DistrictNameAR","alixis_DistrictNameEN","custom_CityName","custom_regionName","UnitType","custom_unitnumber","OccupationMode","Relationship","PIDType","fullName","alixis_FirstName","alixis_secondname","alixis_thirdname","alixis_LastName","alixis_FullNameEnglish","alixis_FirstNameEnglish","alixis_SecondNameEnglish","alixis_ThirdNameEnglish","alixis_LastNameEnglish","alixis_PID","alixis_PIDIssueDate","alixis_PIDExpiryDateHijri","alixis_idissueplace","alixis_birthdate_hijri","alixis_PlaceofBirth","alixis_NationalityName","gender","mobileNo","Email","Occupation","alixis_SponsorID","alixis_SponsorName","alixis_physicallychallenged","CreatedOn"] 
		separator => "," 
		skip_header => "true"
	}
}

output {
	jdbc {
		driver_jar_path => 'E:\libraries\sqljdbc_7.2\enu\mssql-jdbc-7.2.2.jre8.jar'
		connection_string => "jdbc:sqlserver://server-db05:1433;databaseName=my-db-name;user=user;password=xxxx"
		#connection_string => "jdbc:sqlserver://hqit249:1433;databaseName=BOSS;user=sa;password=na@2019"
		#statement => [ "INSERT INTO dbo.log (host, timestamp, message, comment) VALUES(?, ?, ?, 'static string')", "host", "@timestamp", "message" ]
		statement => [ "INSERT INTO dbo.Person (AccountNumber,custom_building,custom_additionalnumber,custom_Zipcode,alixis_StreetNameAR,alixis_StreetNameEN,alixis_DistrictNameAR,alixis_DistrictNameEN,custom_CityName,custom_regionName,UnitType,custom_unitnumber,OccupationMode,Relationship,PIDType,fullName,alixis_FirstName,alixis_secondname,alixis_thirdname,alixis_LastName,alixis_FullNameEnglish,alixis_FirstNameEnglish,alixis_SecondNameEnglish,alixis_ThirdNameEnglish,alixis_LastNameEnglish,alixis_PID,alixis_PIDIssueDate,alixis_PIDExpiryDateHijri,alixis_idissueplace,alixis_birthdate_hijri,alixis_PlaceofBirth,alixis_NationalityName,gender,mobileNo,Email,Occupation,alixis_SponsorID,alixis_SponsorName,alixis_physicallychallenged,CreatedOn) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,CAST(? AS DATETIME))"		
									,'%{AccountNumber}'
									,'%{custom_building}'
									,'%{custom_additionalnumber}'
									,'%{custom_Zipcode}'
									,'%{alixis_StreetNameAR}'
									,'%{alixis_StreetNameEN}'
									,'%{alixis_DistrictNameAR}'
									,'%{alixis_DistrictNameEN}'
									,'%{custom_CityName}'
									,'%{custom_regionName}'
									,'%{UnitType}'
									,'%{custom_unitnumber}'
									,'%{OccupationMode}'
									,'%{Relationship}'
									,'%{PIDType}'
									,'%{fullName}'
									,'%{alixis_FirstName}'
									,'%{alixis_secondname}'
									,'%{alixis_thirdname}'
									,'%{alixis_LastName}'
									,'%{alixis_FullNameEnglish}'
									,'%{alixis_FirstNameEnglish}'
									,'%{alixis_SecondNameEnglish}'
									,'%{alixis_ThirdNameEnglish}'
									,'%{alixis_LastNameEnglish}'
									,'%{alixis_PID}'
									,'%{alixis_PIDIssueDate}'
									,'%{alixis_PIDExpiryDateHijri}'
									,'%{alixis_idissueplace}'
									,'%{alixis_birthdate_hijri}'
									,'%{alixis_PlaceofBirth}'
									,'%{alixis_NationalityName}'
									,'%{gender}'
									,'%{mobileNo}'
									,'%{Email}'
									,'%{Occupation}'
									,'%{alixis_SponsorID}'
									,'%{alixis_SponsorName}'
									,'%{alixis_physicallychallenged}'
									,'%{CreatedOn}'
								]    		
	}
	#stdout { codec => rubydebug }
}